import logging
from datetime import datetime, timedelta
from django.utils import timezone
from django.db.models import Count, Avg, Sum
from django.core.mail import send_mail
from django.conf import settings
from celery import shared_task
from .models import Lesson, Payment, NewsPost, Horse, Trainer, UserProfile

logger = logging.getLogger(__name__)

@shared_task
def daily_cleanup():
    """
    –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    """
    try:
        # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π (—Å—Ç–∞—Ä—à–µ 1 –≥–æ–¥–∞)
        one_year_ago = timezone.now() - timedelta(days=365)
        old_news = NewsPost.objects.filter(
            created_at__lt=one_year_ago,
            is_active=False
        )
        deleted_count = old_news.count()
        old_news.delete()
        
        logger.info(f"–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞: —É–¥–∞–ª–µ–Ω–æ {deleted_count} —Å—Ç–∞—Ä—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π")
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤—Ç—Ä–∞—à–Ω–∏—Ö –∑–∞–Ω—è—Ç–∏—è—Ö
        tomorrow = timezone.now().date() + timedelta(days=1)
        tomorrow_lessons = Lesson.objects.filter(
            date__date=tomorrow,
            status='scheduled'
        )
        
        for lesson in tomorrow_lessons:
            logger.info(f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –∑–∞–≤—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–µ {lesson.student.user.username} —Å {lesson.trainer.full_name}")
        
        return f"–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {deleted_count}, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {tomorrow_lessons.count()}"
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ—á–∏—Å—Ç–∫–µ: {e}")
        raise

@shared_task
def weekly_reports():
    """
    –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –ø–æ –¥–æ—Ö–æ–¥–∞–º –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
    """
    try:
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é
        week_ago = timezone.now() - timedelta(days=7)
        
        # –î–æ—Ö–æ–¥—ã –∑–∞ –Ω–µ–¥–µ–ª—é
        weekly_income = Payment.objects.filter(
            timestamp__gte=week_ago,
            status='completed'
        ).aggregate(total=Sum('amount'))['total'] or 0
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–Ω—è—Ç–∏–π –∑–∞ –Ω–µ–¥–µ–ª—é
        weekly_lessons = Lesson.objects.filter(
            date__gte=week_ago
        ).count()
        
        # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ª–æ—à–∞–¥–∏
        popular_horses = Horse.objects.annotate(
            lesson_count=Count('lessons')
        ).filter(
            lessons__date__gte=week_ago
        ).order_by('-lesson_count')[:5]
        
        logger.info(f"–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç: –¥–æ—Ö–æ–¥ {weekly_income}, –∑–∞–Ω—è—Ç–∏–π {weekly_lessons}")
        
        return {
            'weekly_income': float(weekly_income),
            'weekly_lessons': weekly_lessons,
            'popular_horses': list(popular_horses.values('name', 'lesson_count'))
        }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–º –æ—Ç—á–µ—Ç–µ: {e}")
        raise

@shared_task
def monthly_analytics():
    """
    –ï–∂–µ–º–µ—Å—è—á–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –ª–æ—à–∞–¥—è–º –∏ —Ç—Ä–µ–Ω–µ—Ä–∞–º.
    """
    try:
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü
        month_ago = timezone.now() - timedelta(days=30)
        
        # –¢–æ–ø —Ç—Ä–µ–Ω–µ—Ä–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–Ω—è—Ç–∏–π
        top_trainers = Trainer.objects.annotate(
            lesson_count=Count('lessons')
        ).filter(
            lessons__date__gte=month_ago
        ).order_by('-lesson_count')[:10]
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ª–æ—à–∞–¥—è–º
        horse_stats = Horse.objects.annotate(
            lesson_count=Count('lessons'),
            avg_price=Avg('lessons__price')
        ).filter(
            lessons__date__gte=month_ago
        ).order_by('-lesson_count')[:10]
        
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_lessons = Lesson.objects.filter(date__gte=month_ago).count()
        total_income = Payment.objects.filter(
            timestamp__gte=month_ago,
            status='completed'
        ).aggregate(total=Sum('amount'))['total'] or 0
        
        logger.info(f"–ï–∂–µ–º–µ—Å—è—á–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞: {total_lessons} –∑–∞–Ω—è—Ç–∏–π, –¥–æ—Ö–æ–¥ {total_income}")
        
        return {
            'total_lessons': total_lessons,
            'total_income': float(total_income),
            'top_trainers': list(top_trainers.values('first_name', 'last_name', 'lesson_count')),
            'horse_stats': list(horse_stats.values('name', 'lesson_count', 'avg_price'))
        }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–µ: {e}")
        raise

@shared_task
def send_lesson_reminders():
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –∑–∞–Ω—è—Ç–∏—è—Ö (–∫–∞–∂–¥—ã–π —á–∞—Å).
    """
    try:
        # –ó–∞–Ω—è—Ç–∏—è –≤ –±–ª–∏–∂–∞–π—à–∏–µ 2 —á–∞—Å–∞
        now = timezone.now()
        two_hours_later = now + timedelta(hours=2)
        
        upcoming_lessons = Lesson.objects.filter(
            date__gte=now,
            date__lte=two_hours_later,
            status='scheduled'
        )
        
        emails_sent = 0
        for lesson in upcoming_lessons:
            try:
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                subject = f'–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–Ω—è—Ç–∏–∏ - {lesson.date.strftime("%d.%m.%Y %H:%M")}'
                message = f"""
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {lesson.student.user.username}!

–ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–º –∑–∞–Ω—è—Ç–∏–∏:
- –î–∞—Ç–∞: {lesson.date.strftime("%d.%m.%Y")}
- –í—Ä–µ–º—è: {lesson.date.strftime("%H:%M")}
- –¢—Ä–µ–Ω–µ—Ä: {lesson.trainer.full_name}
- –õ–æ—à–∞–¥—å: {lesson.horse.name}
- –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {lesson.duration} –º–∏–Ω—É—Ç
- –°—Ç–æ–∏–º–æ—Å—Ç—å: {lesson.price} —Ä—É–±.

–ñ–¥–µ–º –≤–∞—Å –≤ –∫–æ–Ω—é—à–Ω–µ!

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ –∫–æ–Ω—é—à–Ω–∏
                """.strip()
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email
                send_mail(
                    subject=subject,
                    message=message,
                    from_email=settings.DEFAULT_FROM_EMAIL,
                    recipient_list=[lesson.student.user.email] if lesson.student.user.email else [],
                    fail_silently=True,
                )
                
                emails_sent += 1
                logger.info(f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: –∑–∞–Ω—è—Ç–∏–µ —á–µ—Ä–µ–∑ {lesson.date - now} –¥–ª—è {lesson.student.user.username}")
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è –∑–∞–Ω—è—Ç–∏—è {lesson.id}: {e}")
        
        return f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–ª—è {emails_sent} –∏–∑ {upcoming_lessons.count()} –∑–∞–Ω—è—Ç–∏–π"
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: {e}")
        raise

@shared_task
def backup_database():
    """
    –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ).
    """
    try:
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        logger.info("–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
        return "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ä–µ–∑–µ—Ä–≤–Ω–æ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        raise

@shared_task
def update_horse_statistics():
    """
    –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ª–æ—à–∞–¥–µ–π (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ).
    """
    try:
        horses = Horse.objects.all()
        
        for horse in horses:
            # –ü–æ–¥—Å—á–µ—Ç –∑–∞–Ω—è—Ç–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü
            month_ago = timezone.now() - timedelta(days=30)
            recent_lessons = horse.lessons.filter(date__gte=month_ago).count()
            
            # –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞ –∑–∞–Ω—è—Ç–∏–µ
            avg_price = horse.lessons.aggregate(avg_price=Avg('price'))['avg_price'] or 0
            
            logger.info(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ—à–∞–¥–∏ {horse.name}: {recent_lessons} –∑–∞–Ω—è—Ç–∏–π, —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ {avg_price}")
        
        return f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è {horses.count()} –ª–æ—à–∞–¥–µ–π"
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ª–æ—à–∞–¥–µ–π: {e}")
        raise

@shared_task
def send_weekly_reports_email():
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –ø–æ email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞
        report_data = weekly_reports()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        subject = f'–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –∫–æ–Ω—é—à–Ω–∏ - {timezone.now().strftime("%d.%m.%Y")}'
        message = f"""
–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –∫–æ–Ω—é—à–Ω–∏

–ü–µ—Ä–∏–æ–¥: {timezone.now().strftime("%d.%m.%Y")}

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
- –î–æ—Ö–æ–¥ –∑–∞ –Ω–µ–¥–µ–ª—é: {report_data.get('weekly_income', 0)} —Ä—É–±.
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–Ω—è—Ç–∏–π: {report_data.get('weekly_lessons', 0)}

üêé –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ª–æ—à–∞–¥–∏:
"""
        
        for horse in report_data.get('popular_horses', []):
            message += f"- {horse['name']}: {horse['lesson_count']} –∑–∞–Ω—è—Ç–∏–π\n"
        
        message += """

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–°–∏—Å—Ç–µ–º–∞ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –∫–æ–Ω—é—à–Ω–∏
        """.strip()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        admin_emails = ['admin@horse-stable.com', 'manager@horse-stable.com']
        
        send_mail(
            subject=subject,
            message=message,
            from_email=settings.DEFAULT_FROM_EMAIL,
            recipient_list=admin_emails,
            fail_silently=True,
        )
        
        logger.info(f"–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {len(admin_emails)} –∞–¥—Ä–µ—Å–æ–≤")
        return f"–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {len(admin_emails)} –∞–¥—Ä–µ—Å–æ–≤"
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ—Ç–ø—Ä–∞–≤–∫–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        raise 