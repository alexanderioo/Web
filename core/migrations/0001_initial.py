# Generated by Django 4.2.17 on 2025-05-24 05:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Horse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('gender', models.CharField(choices=[('male', 'Жеребец'), ('female', 'Кобыла')], max_length=10, verbose_name='Пол')),
                ('photo', models.ImageField(upload_to='horses/', verbose_name='Фото')),
                ('description', models.TextField(verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Лошадь',
                'verbose_name_plural': 'Лошади',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Дата и время занятия')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Цена')),
                ('status', models.CharField(choices=[('scheduled', 'Запланировано'), ('completed', 'Завершено')], max_length=20, verbose_name='Статус')),
                ('horse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='core.horse', verbose_name='Лошадь')),
            ],
            options={
                'verbose_name': 'Занятие',
                'verbose_name_plural': 'Занятия',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Stable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('location', models.CharField(max_length=200, verbose_name='Местоположение')),
                ('capacity', models.PositiveIntegerField(verbose_name='Вместимость')),
            ],
            options={
                'verbose_name': 'Конюшня',
                'verbose_name_plural': 'Конюшни',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Адрес')),
                ('is_trainer', models.BooleanField(default=False, verbose_name='Является тренером')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(verbose_name='О себе')),
                ('photo', models.ImageField(upload_to='trainers/', verbose_name='Фото')),
                ('experience_years', models.PositiveIntegerField(verbose_name='Опыт (лет)')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_info', to='core.userprofile', verbose_name='Профиль пользователя')),
            ],
            options={
                'verbose_name': 'Тренер',
                'verbose_name_plural': 'Тренеры',
                'ordering': ['profile__user__username'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_time', models.DateTimeField(verbose_name='Предпочтительное время')),
                ('status', models.CharField(choices=[('pending', 'В ожидании'), ('approved', 'Одобрено'), ('rejected', 'Отклонено')], max_length=20, verbose_name='Статус')),
                ('horse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedule_requests', to='core.horse', verbose_name='Лошадь')),
                ('trainer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedule_requests', to='core.trainer', verbose_name='Тренер')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_requests', to='core.userprofile', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Запрос на расписание',
                'verbose_name_plural': 'Запросы на расписание',
                'ordering': ['-preferred_time'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время')),
                ('status', models.CharField(choices=[('pending', 'В ожидании'), ('completed', 'Завершено'), ('failed', 'Неудачно')], max_length=20, verbose_name='Статус')),
                ('purpose', models.CharField(max_length=100, verbose_name='Назначение')),
                ('reference_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID транзакции')),
                ('lesson', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='core.lesson', verbose_name='Занятие')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Платёж',
                'verbose_name_plural': 'Платежи',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NewsPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('content', models.TextField(verbose_name='Контент')),
                ('image', models.ImageField(blank=True, null=True, upload_to='news/', verbose_name='Изображение')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Создано')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата публикации')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('is_scheduled', models.BooleanField(default=False, verbose_name='Запланирована')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news_posts', to='core.userprofile', verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='core.userprofile', verbose_name='Ученик'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='core.trainer', verbose_name='Тренер'),
        ),
        migrations.CreateModel(
            name='HorseTrainerRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата начала работы')),
                ('notes', models.TextField(blank=True, verbose_name='Заметки')),
                ('horse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.horse')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.trainer')),
            ],
            options={
                'verbose_name': 'Связь Лошади и Тренера',
                'verbose_name_plural': 'Связи Лошадей и Тренеров',
                'unique_together': {('horse', 'trainer')},
            },
        ),
        migrations.AddField(
            model_name='horse',
            name='owners',
            field=models.ManyToManyField(blank=True, related_name='horses', to='core.userprofile', verbose_name='Владельцы'),
        ),
        migrations.AddField(
            model_name='horse',
            name='stable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='horses', to='core.stable', verbose_name='Конюшня'),
        ),
        migrations.AddField(
            model_name='horse',
            name='trainers',
            field=models.ManyToManyField(blank=True, related_name='horses', through='core.HorseTrainerRelation', to='core.trainer', verbose_name='Тренеры'),
        ),
    ]
